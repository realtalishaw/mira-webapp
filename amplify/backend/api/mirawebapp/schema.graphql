type Action @model @auth(rules: [{allow: public}]) {
  id: ID!
  prompt: String
  imgKey: [String]
  sessionID: ID! @index(name: "bySession")
  tool: String
}

type Session @model @auth(rules: [{allow: public}]) {
  id: ID!
  designID: ID! @index(name: "byDesign")
  Actions: [Action] @hasMany(indexName: "bySession", fields: ["id"])
}

type Following @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: String
  userID: ID! @index(name: "byUser")
}

type Followers @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime
  userID: ID! @index(name: "byUser")
}

type Like @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime
  userID: ID! @index(name: "byUser")
  collectionID: ID @index(name: "byCollection")
  designID: ID @index(name: "byDesign")
  commentsID: ID @index(name: "byComments")
}

type Comments @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  userID: ID! @index(name: "byUser")
  designID: ID! @index(name: "byDesign")
  createdAt: AWSDateTime
  Likes: [Like] @hasMany(indexName: "byComments", fields: ["id"])
}

type MoodBoard @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  colors: [String]
  textures: [String]
  patterns: [String]
  inspiration: [String]
  userID: ID! @index(name: "byUser")
  createdAt: AWSDate
}

type Design @model @auth(rules: [{allow: public}]) {
  id: ID!
  designName: String
  designDescription: String
  collectionID: ID! @index(name: "byCollection")
  tags: [String]
  Comments: [Comments] @hasMany(indexName: "byDesign", fields: ["id"])
  createdAt: AWSDateTime
  Likes: [Like] @hasMany(indexName: "byDesign", fields: ["id"])
  designImage: String
  Session: [Session] @hasMany(indexName: "byDesign", fields: ["id"])
}

type Collection @model @auth(rules: [{allow: public}]) {
  id: ID!
  collectionName: String!
  userID: ID! @index(name: "byUser")
  Designs: [Design] @hasMany(indexName: "byCollection", fields: ["id"])
  createdAt: AWSDateTime
  collectionURL: String
  Likes: [Like] @hasMany(indexName: "byCollection", fields: ["id"])
  privacy: Boolean
  description: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  avatar: String
  firstName: String!
  lastName: String!
  username: String!
  bio: String
  website: String
  facebookLink: String
  instagramLink: String
  twitterLink: String
  email: AWSEmail!
  Collections: [Collection] @hasMany(indexName: "byUser", fields: ["id"])
  MoodBoards: [MoodBoard] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comments] @hasMany(indexName: "byUser", fields: ["id"])
  profileUrl: String!
  Likes: [Like] @hasMany(indexName: "byUser", fields: ["id"])
  Followers: [Followers] @hasMany(indexName: "byUser", fields: ["id"])
  followings: [Following] @hasMany(indexName: "byUser", fields: ["id"])
  uploads: [String]
}
 